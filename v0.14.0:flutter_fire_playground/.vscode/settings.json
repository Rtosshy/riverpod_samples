{
    "dart.flutterSdkPath": ".fvm/flutter_sdk",
	// Remove .fvm files from search
	"search.exclude": {
		"**/.fvm": true
	},
	// Remove from file watching
	"files.watcherExclude": {
		"**/.fvm": true
	},
	// ブレークポイントがヒットしたときに自動的にデバッグビューが表示されるようにします。
    // この設定はグローバルであり、言語ごとに設定することはできません。
	"debug.openDebug": "openOnDebugBreak",

	"[dart]": {
		// 保存時や特定の文字の入力時にコードを自動的にフォーマットする
		// (like `;` and `}`).
		"editor.formatOnSave": true,
		"editor.formatOnType": true,

		// 80文字でガイド線を引き、Dartの書式設定がコードを折り返すようにします。
		"editor.rulers": [80],

		// 選択範囲に一致する単語のハイライト表示を無効にします。
        // これがない場合、選択されたテキストのすべてのインスタンスがハイライトされ、
        // 選択された変数への正確な参照のみをハイライトするDartの機能を妨害します。
		"editor.selectionHighlight": false,

		// デフォルトでは、「スニペットモード」（挿入されたコード内のプレースホルダの編集）の時に
        // コード補完がポップアップしないようになっています。
        // このオプションを `false` に設定することで、
        // スニペットのプレースホルダを使用していない場合と同様に、コード補完が通常通りに開かれるようになります。
		"editor.suggest.snippetsPreventQuickSuggestions": false,

		// デフォルトでは、VS Codeは、最も最近使用された項目の補完を事前に選択します。
        // これは通常、最も関連性の高い項目ではありません。
		// "first "は常に最上位の項目を選択します。"recentlyUsedByPrefix "は、
        // 補完が呼び出された場所の直前のテキストに基づいて最近使用された項目をフィルタリングします。
		"editor.suggestSelection": "first",

		// 完了リストが表示されていない場合でも、<TAB>を押すことで `for` のようなスニペットを完了させることができます。
		"editor.tabCompletion": "onlySnippets",

		// デフォルトでは、言語サービスが独自の補完を提供していない場合、VS Code は現在のファイルで見つかった単語でコード補完を入力します。
		// これは、コメントや文字列を編集する際にコード補完が単語を示唆する結果となります。この設定ではそれを防ぐことができます。
		"editor.wordBasedSuggestions": false,
	}
}
